'''
cv2实际上用起来是最方便的了，但是唯一的缺点就是我要写检测结果的标注text的时候，不能写中文，如果写出来的画都变成问号了。因此就尝试了用PIL
'''
def draw_box_cv(img, boxes, labels, scores):
    img = img + np.array([103.939, 116.779, 123.68])
    boxes = boxes.astype(np.int64)
    labels = labels.astype(np.int32)
    img = np.array(img, np.float32)
    img = np.array(img*255/np.max(img), np.uint8)
 
    num_of_object = 0
    for i, box in enumerate(boxes):
        x_c, y_c, w, h, theta = box[0], box[1], box[2], box[3], box[4]
 
        label = labels[i]
        if label != 0:
            num_of_object += 1
            color = (np.random.randint(255), np.random.randint(255), np.random.randint(255))
            rect = ((x_c, y_c), (w, h), theta)  
            #根据四边形的中心x_c, y_c，w，h以及偏移角度theta，恢复出四个点点的坐标
            rect = cv2.boxPoints(rect)
            rect = np.int0(rect)  #转为int
            cv2.drawContours(img, [rect], -1, color, 3)  #在图中根据rect绘制
 
            category = LABEl_NAME_MAP[label]  #类别
 
            if scores is not None:
                cv2.rectangle(img,
                              pt1=(x_c, y_c),
                              pt2=(x_c + 120, y_c + 15),
                              color=color,
                              thickness=-1)
                cv2.putText(img,
                            text=category+": "+str(scores[i]),
                            org=(x_c, y_c+10),
                            fontFace=1,
                            fontScale=1,
                            thickness=2,
                            color=(color[1], color[2], color[0]))
            else:
                cv2.rectangle(img,
                              pt1=(x_c, y_c),
                              pt2=(x_c + 40, y_c + 15),
                              color=color,
                              thickness=-1)
                cv2.putText(img,
                            text=category,
                            org=(x_c, y_c + 10),
                            fontFace=1,
                            fontScale=1,
                            thickness=2,
                            color=(color[1], color[2], color[0]))
    cv2.putText(img,
                text=str(num_of_object),
                org=((img.shape[1]) // 2, (img.shape[0]) // 2),
                fontFace=3,
                fontScale=1,
                color=(255, 0, 0))
return img
